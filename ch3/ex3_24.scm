(define (make-table same-key?)
    (let ((local-table (list '*table*)))
        (define (custom-assoc key records)
            (cond ((null? records) #f)
                  ((same-key? key (car records)) (cdr records))
                  (else (custom-assoc key (cdr records)))))
        (define (lookup key)
            (let ((record (custom-assoc key (cdr local-table))))
                (if record
                    (cdr record)
                    #f)))
        (define (insert! key value)
            (let ((record (custom-assoc key (cdr local-table))))
                (if record
                    (set-cdr! record value)
                    (set-cdr! local-table (cons (cons key value) (cdr local-table)))))
            'ok)
        (define (dispatch m)
            (cond ((eq? m 'lookup) lookup)
                  ((eq? m 'insert!) insert)
                  (else (error "Unknown operatoin for TABLE" m))))
        dispatch))